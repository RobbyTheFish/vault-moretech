# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H 84.201.180.64 >> ~/.ssh/known_hosts

      - name: Deploy to the server
        run: |
          mkdir ../build
          cp -TR . ../build
          tar -cvf deploy.tar ../build/
          scp deploy.tar ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }}:/home/${{ secrets.USER_NAME }}/
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "tar -xvf /home/${{ secrets.USER_NAME }}/deploy.tar"
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "rm /home/${{ secrets.USER_NAME }}/deploy.tar"
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "sudo rm -rf /vault-copy"
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "sudo mv /home/${{ secrets.USER_NAME }}/build /vault-copy"
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "sudo chown -R root:root /vault-copy/ && sudo chmod 755 /vault-copy/"

      - name: Build with Docker
        run: |
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "sudo cp /home/${{ secrets.USER_NAME }}/.env /vault-copy"
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "sudo docker compose -f /vault-copy/docker-compose.yaml down -d"
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "sudo docker compose -f /vault-copy/docker-compose.yaml up -d --build"
